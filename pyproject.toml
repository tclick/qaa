[tool.poetry]
name = "qaa"
version = "3.0.0-rc3"
description = "Quasi-Anharmonic Analysis"
authors = ["Timothy H. Click <tclick@okstate.edu>"]
license = "BSD-3-Clause"
readme = "README.rst"
homepage = "https://github.com/tclick/qaa"
repository = "https://github.com/tclick/qaa"
documentation = "https://pyqaa.readthedocs.io"
classifiers = [
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.urls]
Changelog = "https://github.com/tclick/qaa/releases"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
click = "^8.1.3"
holoviews = "^1.14.9"
scikit-learn = "^1.1.1"
MDAnalysis = "^2.2.0"
jupyter = {version = "^1.0.0", optional = true}
ipykernel = {version = "^6.15.0", optional = true}
plotly = {version = "^5.8.2", optional = true}
jupyterlab = {version = "^3.4.3", optional = true}
jupyterlab-code-formatter = {version = "^1.4.11", optional = true}
jupyterlab-mathjax3 = {version = "^4.3.0", optional = true}
nglview = {version = "^3.0.3", optional = true}
PyYAML = "^6.0"
pylibyaml = "^0.1.0"

[tool.poetry.extras]
jupyter = ["jupyter", "jupyterlab", "jupyterlab-code-formatter",
    "jupyterlab-mathjax3", "nglview", "ipykernal", "plotly"]

[tool.poetry.scripts]
qaa = "qaa.__main__:main"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
pytest-cache = "^1.0"
pytest-console-scripts = "^1.3.1"
pytest-cov = "^3.0.0"
pytest-flake8 = "^1.1.1"
pytest-pep8 = "^1.0.6"
pytest-mypy = "^0.9.1"
pytest-random-order = "^1.0.4"
coverage = {version = "^6.4.1", extras = ["toml"]}
safety = "^1.10.3"
mypy = "^0.961"
typeguard = "^2.13.3"
xdoctest = {version = "^1.0.0", extras = ["colors"]}
Sphinx = "^5.0.2"
sphinx-autobuild = "^2021.3.14"
sphinx-automodapi = "^0.14.1"
sphinx-rtd-theme = "^1.0.0"
sphinx-click = "^4.2.0"
pre-commit = "^2.19.0"
pre-commit-hooks = "^4.3.0"
black = "^22.3.0"
flake8 = "^4.0.1"
flake8-bandit = "^3.0.0"
flake8-bugbear = "^22.4.25"
flake8-docstrings = "^1.6.0"
flake8-rst-docstrings = "^0.2.6"
flake8-black = "^0.3.3"
flake8-import-order = "^0.18.1"
pep8-naming = "^0.13.0"
darglint = "^1.8.1"
reorder-python-imports = "^3.1.0"
Pygments = "^2.12.0"
ipython = "^8.4.0"
towncrier = "^21.9.0"
nox = "^2022.1.7"
nox-poetry = "^1.0.0"
numpydoc = "^1.4.0"
codecov = "^2.1.12"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["qaa"]

[tool.coverage.report]
show_missing = true

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools>=52.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.towncrier]
package = "qaa"
package_dir = "src"
filename = "docs/changelog.rst"
directory = "docs/changelog"
template = "docs/changelog/template.jinja2"
title_format = "v{version} ({project_date})"
issue_format = "`#{issue} <https://github.com/tox-dev/tox/issues/{issue}>`_"
underlines = ["-", "^"]

[[tool.towncrier.section]]
path = ""

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecation"
name = "Deprecations (removal in next major release)"
showcontent = true

[[tool.towncrier.type]]
directory = "breaking"
name = "Backward incompatible changes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous"
showcontent = true

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.pylint.messages_control]
disable = "C0330, C0326"

[tool.pylint.format]
max-line-length = "88"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
